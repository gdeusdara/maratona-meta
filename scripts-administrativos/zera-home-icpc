#!/bin/bash

exec &> /var/log/zera-home-icpc.log

if ! whoami|grep -q root; then
  echo "Este comando deve ser executado com privilégios de ROOT."
  echo "Considere colocar o comando \"sudo\" a frente da chamada."
  echo
  echo "Uso: sudo $0"
  exit 1
fi

# Se o usuario icpc não existe, o script deve passar adiante para cria-lo.
# No caso de uma nova instalação via LiveCD do maratona na máquina, o usuario
# não existe, e nesse caso, ele deve ser criado para que o ambiente já esteja
# pronto para uso. No caso de uma instação via apt, o .clean-home irá existir no
# diretorio, e o usuario não vai existir, o que deve cria-lo.
getent passwd icpc &>/dev/null
RESP="$?"
if [[ ! -e "/home/icpc/.clean-home" ]] && [[ "$1" != "-f" ]] && ((RESP == 0)) ; then
  echo "No /home/icpc/.clean-home file found"
  echo "If you wish to clean anyway run:"
  echo "  $0 -f"
  exit 1
fi

echo "Cleaning ICPC home..." > /etc/nologin
# Gera uma senha de inicio.
pass=$(echo -n icpc | makepasswd --clearfrom - --crypt-md5 | awk '{print $NF}')

# Verifica a existencia do usuario ICPC
# Caso ele não exista, ele deve ser criado com a senha criada anteriormente.
printf "Verificando existência do usuário \"icpc\""
if ((RESP != 0 )); then
	echo "."
	echo "Usuario não exite, criando..".
	useradd -d /home/icpc -k /etc/skel -m -p "$pass" -s /bin/bash -g users icpc

	if ! grep -q "^icpc " /etc/security/limits.conf; then
		echo "icpc          hard nproc 1024" >> /etc/security/limits.conf
	fi
fi

# De qualquer modo, o seu diretorio tem que ser recriado.
printf "Restaurando senha"
# E o usermod será pra todos.
usermod -d /home/icpc -p "$pass" -s /bin/bash -g users icpc
echo "."

printf "Recriando diretório home"
rm -rf ~icpc
cp -a /etc/skel ~icpc
chown -R icpc:users ~icpc
echo "."

# Os arquivos de configuração dos editores do maratona estão no diretório
# usr/share/maratona-usuario-icpc/editores-config que são mantidos no skel
# e quando o usuario icpc é recriado, é copiado para a home do icpc,
# extraido e excluido (o .tar.gz)
for config in /usr/share/maratona-usuario-icpc/editores-config/*; do
  [[ ! -e "$config" ]] && continue
  tar -xf $config -C /home/icpc/
done

# copiando arquivos das extenções do vscode
mkdir -p /home/icpc/.var/app/com.visualstudio.code/data/vscode/extensions/
cp -r /usr/share/maratona-vscode-extensions/* /home/icpc/.var/app/com.visualstudio.code/data/vscode/extensions/

# criando arquivo para vscode não mostrar warning ao iniciar pela primeira vez
mkdir -p /home/icpc/.var/app/com.visualstudio.code/config/
touch /home/icpc/.var/app/com.visualstudio.code/config/flatpak-vscode-first-run

# Copiando os atalhos da documentação para o o Desktop
mkdir -p /home/icpc/Desktop/
[ -f /usr/share/applications/cppreference.desktop ] && \
cp /usr/share/applications/cppreference.desktop /home/icpc/Desktop/ && \
su icpc -c 'dbus-launch gio set /home/icpc/Desktop/cppreference.desktop "metadata::trusted" true'

[ -f /usr/share/applications/javadoc.desktop ] && \
cp /usr/share/applications/javadoc.desktop /home/icpc/Desktop/ && \
su icpc -c 'dbus-launch gio set /home/icpc/Desktop/javadoc.desktop "metadata::trusted" true'

[ -f /usr/share/applications/python3doc.desktop ] && \
cp /usr/share/applications/python3doc.desktop /home/icpc/Desktop/ && \
su icpc -c 'dbus-launch gio set /home/icpc/Desktop/python3doc.desktop "metadata::trusted" true'

# Mudando o dono, pois este script roda como root, então o que ele cria
# pertence ao root, o que não deve acontecer.
chown -R icpc:users ~icpc
chmod 755 /home/icpc/Desktop/*


for i in media mnt var opt tmp usr $(df|grep tmpfs|awk '{print $NF}'); do
  printf "Removing files from: /$i"
  find /$i -user icpc -delete
  echo '.'
done


echo
echo "Tudo feito."
rm /etc/nologin

exit 0
